# Some of the longer scripts used in the book
# `Introductory Time Series with R'
# Copyright (c) 2009 P. Cowpertwait and A. Metcalfe
#
# To use just paste the script you want into R
#
# Chapter 3, p52-53, Bass curve fitted using nls
T79 <- 1:10
Tdelt <- (1:100) / 10
Sales <- c(840,1470,2110,4000, 7590, 10950, 10530, 9470, 7790, 5890)
Cusales <- cumsum(Sales)
Bass.nls <- nls(Sales ~ M * ( ((P+Q)^2 / P) * exp(-(P+Q) * T79) ) /
(1+(Q/P)*exp(-(P+Q)*T79))^2, start = list(M=60630, P=0.03, Q=0.38))
summary(Bass.nls)
Bcoef <- coef(Bass.nls)
m <- Bcoef[1]
p <- Bcoef[2]
q <- Bcoef[3]
ngete <- exp(-(p+q) * Tdelt)
Bpdf <- m * ( (p+q)^2 / p ) * ngete / (1 + (q/p) * ngete)^2
plot(Tdelt, Bpdf, xlab = "Year from 1979",
ylab = "Sales per year", type='l')
points(T79, Sales)
Bcdf <- m * (1 - ngete)/(1 + (q/p)*ngete)
plot(Tdelt, Bcdf, xlab = "Year from 1979",
ylab = "Cumulative sales", type='l')
points(T79, Cusales)
# Chapter 7, p144
get.best.arima <- function(x.ts, maxord = c(1,1,1,1,1,1))
{
best.aic <- 1e8
n <- length(x.ts)
for (p in 0:maxord[1]) for(d in 0:maxord[2]) for(q in 0:maxord[3])
for (P in 0:maxord[4]) for(D in 0:maxord[5]) for(Q in 0:maxord[6])
{
fit <- arima(x.ts, order = c(p,d,q),
seas = list(order = c(P,D,Q),
frequency(x.ts)), method = "CSS")
fit.aic <- -2 * fit$loglik + (log(n) + 1) * length(fit$coef)
if (fit.aic < best.aic)
{
best.aic <- fit.aic
best.fit <- fit
best.model <- c(p,d,q,P,D,Q)
}
}
list(best.aic, best.fit, best.model)
}
View(get.best.arima)
View(get.best.arima)
# Chapter 7, p149, simulated GARCH model
set.seed(1)
alpha0 <- 0.1
alpha1 <- 0.4
beta1 <- 0.2
w <- rnorm(10000)
a <- rep(0, 10000)
h <- rep(0, 10000)
for (i in 2:10000) {
h[i] <- alpha0 + alpha1 * (a[i - 1]^2) + beta1 * h[i -
1]
a[i] <- w[i] * sqrt(h[i])
}
acf(a)
acf(a^2)
# Chapter 8, p162, calculation of fractionally differenced series etc
library(fracdiff)
set.seed(1)
fds.sim <- fracdiff.sim(10000, ar = 0.9, d = 0.4)
x <- fds.sim$series
fds.fit <- fracdiff(x, nar=1)
n <- length(x)
L <- 30
d <- fds.fit$d
fdc <- d
fdc[1] <- fdc
for (k in 2:L) fdc[k] <- fdc[k-1] * (d+1-k) / k
y <- rep(0, L)
for (i in (L+1):n) {
csm <- x[i]
for (j in 1:L) csm <- csm + ((-1)^j) * fdc[j] * x[i-j]
y[i] <- csm
}
y <- y[(L+1):n]
z.ar <- ar(y)
ns <- 1 + z.ar$order
z <- z.ar$res [ns:length(y)]
par(mfcol = c(2, 2))
plot(as.ts(x), ylab = "x")
acf(x) ; acf(y) ; acf(z)
# Chapter 9, p184, spectrum of broken motor
www <- "http://www.massey.ac.nz/~pscowper/ts/imotor.txt"
imotor.dat <- read.table(www, header = T)
# Chapter 9, p186, plots for excavator series
www <- "http://www.massey.ac.nz/~pscowper/ts/zdd.txt"
zdotdot.dat <- read.table(www, header = T)
# Chapter 9, p186, plots for excavator series
www <- "http://www.massey.ac.nz/~pscowper/ts/zdd.txt"
zdotdot.dat <- read.table(www, header = T)
# Chapter 10, p205, investigation of difference equation approximation,
# plot in Figure 10.1, etc.  Note that this one takes a while to simulate!
m <- 1; c <- 1; k <- 16.25; Delta <- 0.01
a0 <- m / Delta^2 + c / Delta + k
a1 <- -2 * m / Delta^2 - c / Delta; a2 <- m / Delta^2
n <- 100000
y <- c(0, 0); x <- c(0, 0)
set.seed(1)
for (i in 3:n) {
x[i] <- x[i-1] - 0.5 * x[i-2] + rnorm(1)
y[i] <- (-a1 * y[i-1] - a2 * y[i-2]) / a0 + x[i] / a0
}
Sxx <- spectrum(x, span = 31)
Syy <- spectrum(y, span = 31)
Gemp <- sqrt( Syy$spec[1:5000] / Sxx$spec[1:5000] )
Freq <- Syy$freq[1:5000]
FreH <- Freq / Delta
Omeg  <- 2 * pi * Freq
OmegH <- 2 * pi * FreH
Gth <- sqrt( 1/( (k-m*OmegH^2)^2 + c^2*OmegH^2 ))
Gar <- 1 / abs( 1 + a1/a0 * exp(-Omeg*1i) + a2/a0 * exp(-Omeg*2i) )
plot(FreH, Gth, xlab = "Frequency (Hz)", ylab = "Gain", type="l")
lines(FreH, Gemp, lty = "dashed")
lines(FreH, Gar, lty = "dotted")
# Chapter 10, p206-207, tugboat series, plot in Figure 10.3 etc
www <- "http://www.massey.ac.nz/~pscowper/ts/leg4.dat"
tug.dat <- read.table(www, header = T)
# Chapter 12, p234, Kalman filter, plot in Figure 12.1, etc
library(sspir)
library(graphics); library(grid)
pdf(file="circle.pdf", width=6, height=6.5)
plot(-1:1,-1:1, type='n', xlab='x (Real axis)', ylab="y (Imaginary axis)", cex.lab=1.3)
x=seq(-1,1,len=1000); y=sqrt(1 - x^2); points(x,y,type='l', lwd=1.5); points(x,-y, type='l', lwd=1.5)
theta=seq(0,acos(.5),len=1000); x=.29*cos(theta); y=.29*sin(theta); points(x,y,type='l', lwd=1.2);
segments(0,0,0.5,sqrt(1-.5^2),lwd=2, lty=3); abline(v=0); abline(h=0)
arrows(0,0, .5,0, ang=8, lwd=3)
segments(0.5, 0, .5, .3, lwd=3)
arrows(0.5, 0.5, .5, sqrt(1-.5^2), ang=8, lwd=3)
text(.66, .95, expression(e^{i*omega*italic(t)}), cex=1.9)
text(.15, .1, expression(omega*italic(t)), cex=1.6)
#x=seq(0,0.2,len=1000); y=sqrt(.2 - x^2); points(x,y,type='l');
text(.25, -.15, expression(plain(cos)(omega*italic(t))), cex=1.5)
text(.55, .4, expression(plain(sin)(omega*italic(t))), cex=1.5)
dev.off()
library(graphics); library(grid)
pdf(file="circle.pdf", width=6, height=6.5)
plot(-1:1,-1:1, type='n', xlab='x (Real axis)', ylab="y (Imaginary axis)", cex.lab=1.3)
x=seq(-1,1,len=1000); y=sqrt(1 - x^2); points(x,y,type='l', lwd=1.5); points(x,-y, type='l', lwd=1.5)
theta=seq(0,acos(.5),len=1000); x=.29*cos(theta); y=.29*sin(theta); points(x,y,type='l', lwd=1.2);
segments(0,0,0.5,sqrt(1-.5^2),lwd=2, lty=3); abline(v=0); abline(h=0)
arrows(0,0, .5,0, ang=8, lwd=3)
segments(0.5, 0, .5, .3, lwd=3)
arrows(0.5, 0.5, .5, sqrt(1-.5^2), ang=8, lwd=3)
text(.66, .95, expression(e^{i*omega*italic(t)}), cex=1.9)
text(.15, .1, expression(omega*italic(t)), cex=1.6)
#x=seq(0,0.2,len=1000); y=sqrt(.2 - x^2); points(x,y,type='l');
text(.25, -.15, expression(plain(cos)(omega*italic(t))), cex=1.5)
text(.55, .4, expression(plain(sin)(omega*italic(t))), cex=1.5)
dev.off()
# Some of the longer scripts used in the book
# `Introductory Time Series with R'
# Copyright (c) 2009 P. Cowpertwait and A. Metcalfe
#
# To use just paste the script you want into R
#
getwd()
setwd('C:/Users/jamel/Documents/GitHub/Introductory-Time-Series-with-R-Datasets')
www = "cbe.dat"
cbe = read.table(www, head=T)
choc.ts <- ts(cbe[,1], st=1958, fr=12)
plot(choc.ts)
plot(aggregate(choc.ts))
boxplot(choc.ts ~ cycle(choc.ts))
www <- "cbe.dat"
CBE <- read.table(www, header = T)
Elec.ts <- ts(CBE[, 3], start = 1958, freq = 12)
Time <- 1:length(Elec.ts)
Imth <- cycle(Elec.ts)
Elec.lm <- lm(log(Elec.ts) ~ Time + I(Time^2) + factor(Imth))
acf(resid(Elec.lm))
best.order <- c(0, 0, 0)
best.aic <- Inf
for (i in 0:2) for (j in 0:2) {
fit.aic <- AIC(arima(resid(Elec.lm), order = c(i, 0,
j)))
if (fit.aic < best.aic) {
best.order <- c(i, 0, j)
best.arma <- arima(resid(Elec.lm), order = best.order)
best.aic <- fit.aic
}
}
best.order
acf(resid(best.arma))
new.time <- seq(length(Elec.ts), length = 36)
new.data <- data.frame(Time = new.time, Imth = rep(1:12,
3))
predict.lm <- predict(Elec.lm, new.data)
predict.arma <- predict(best.arma, n.ahead = 36)
elec.pred <- ts(exp(predict.lm + predict.arma$pred), start = 1991,
freq = 12)
ts.plot(cbind(Elec.ts, elec.pred), lty = 1:2)
www = "cbe.dat"
cbe = read.table(www, head=T)
choc.ts <- ts(cbe[,1], st=1958, fr=12)
plot(choc.ts)
plot(aggregate(choc.ts))
boxplot(choc.ts ~ cycle(choc.ts))
# Some of the longer scripts used in the book
# `Introductory Time Series with R'
# Copyright (c) 2009 P. Cowpertwait and A. Metcalfe
#
# To use just paste the script you want into R
#
getwd()
setwd('C:\Users\jamel\Documents\GitHub\Introductory-Time-Series-with-R-Datasets-forked')
# Some of the longer scripts used in the book
# `Introductory Time Series with R'
# Copyright (c) 2009 P. Cowpertwait and A. Metcalfe
#
# To use just paste the script you want into R
#
getwd()
setwd('C:\\Users\\jamel\\Documents\\GitHub\\Introductory-Time-Series-with-R-Datasets-forked')
#
#
www = "cbe.dat"
cbe = read.table(www, head=T)
choc.ts <- ts(cbe[,1], st=1958, fr=12)
plot(choc.ts)
plot(aggregate(choc.ts))
boxplot(choc.ts ~ cycle(choc.ts))
